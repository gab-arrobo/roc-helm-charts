# SPDX-FileCopyrightText: 2020-present Open Networking Foundation <info@opennetworking.org>
#
# SPDX-License-Identifier: LicenseRef-ONF-Member-Only-1.0

# Default values for all Aether Helm charts.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  fullnameOverride: "onos"
  nameOverride: ""
  image:
    registry: ""
    tag: ""
  store:
    consensus:
      enabled: true
      name: ""
      image:
        registry: ""
        repository: atomix/atomix-raft-storage-node
        tag: ""
        pullPolicy: IfNotPresent
        pullSecrets: []
      clusters: 1
      replicas: 1
      partitions: 1
      raft: {}
      persistence:
        storageClass: ""
        storageSize: 1Gi

import:
  onos-topo:
    enabled: true
  onos-config:
    enabled: true
  onos-gui:
    enabled: false
  onos-cli:
    enabled: true
  aether-roc-api:
    enabled: true
  aether-roc-websocket:
    enabled: true
  aether-roc-gui:
    v2:
      enabled: false
    v4:
      enabled: true
  sdcore-adapter:
    v2:
      enabled: true
    v4:
      enabled: false
  subscriber-proxy:
    enabled: true
  sdcore-test-dummy:
    enabled: true
  grafana:
    enabled: true #also enable the proxy below
  prometheus:
    acc:
      enabled: true # controls its plproxy too
    amp:
      enabled: true # controls its plproxy too
    ace:
      enabled: true
  prom-label-proxy:
    acc:
      enabled: true
    amp:
      enabled: true
  demo-exporter:
    enabled: true

# ONOS-TOPO
onos-topo:
  store:
    consensus:
      enabled: false

# ONOS-GUI
onos-gui: {}

# ONOS-CLI
onos-cli: {}

# Aether ROC API
aether-roc-api: {}

# Aether ROC GUI
aether-roc-gui:
  websocket:
    proxyEnabled: true
  grafana:
    proxyEnabled: true
    service: aether-roc-umbrella-grafana # the grafana hostname - use FQDN for other namespaces
  prometheus:
    proxyEnabled: true
    service: aether-roc-umbrella-prometheus-acc-server

aether-roc-gui-v4:
  nameOverride: aether-roc-gui-v4
  fullnameOverride: aether-roc-gui-v4
  websocket:
    proxyEnabled: true
  grafana:
    proxyEnabled: true
    service: aether-roc-umbrella-grafana # the grafana hostname - use FQDN for other namespaces
  prometheus:
    acc:
      proxyEnabled: true
      service: prom-label-proxy-acc
      protocol: http
      port: 8080
    amp:
      proxyEnabled: true
      service: prom-label-proxy-amp
      protocol: http
      port: 8080
    site:
      - name: ace1
        service: aether-roc-umbrella-prometheus-ace-server
        protocol: http
        port: 80

# SD-Core Adapter
sdcore-adapter-v2:
  prometheusEnabled: false
  partialUpdateEnabled: false

sdcore-adapter-v4:
  prometheusEnabled: false
  partialUpdateEnabled: false

# Subscriber Proxy
subscriber-proxy:
  nameOverride: subscriber-proxy
  fullnameOverride: subscriber-proxy
  prometheusEnabled: false

# Prom label Proxy
prom-label-proxy-amp:
  nameOverride: prom-label-proxy-amp
  fullnameOverride: prom-label-proxy-amp
  prometheusEnabled: false
  config:
    upstream: http://aether-roc-umbrella-prometheus-amp-server

prom-label-proxy-acc:
  nameOverride: prom-label-proxy-acc
  fullnameOverride: prom-label-proxy-acc
  prometheusEnabled: false
  config:
    upstream: http://aether-roc-umbrella-prometheus-acc-server

grafana:
  sidecar:
    dashboards:
       enabled: true
       label: grafana_dashboard
       labelValue: aether-roc-gui
    datasources:
       enabled: true
       label: grafana_datasource
       labelValue: aether-roc-gui
  source:
  - name: acc
    protocol: http
    service: aether-roc-umbrella-prometheus-acc-server
    port: 80
  - name: amp
    protocol: http
    service: aether-roc-umbrella-prometheus-amp-server
    port: 80
  - name: acme-chicago
    protocol: http
    service: aether-roc-umbrella-prometheus-ace-server
    port: 80
  - name: starbucks-newyork
    protocol: http
    service: aether-roc-umbrella-prometheus-ace-server
    port: 80
  - name: starbucks-seattle
    protocol: http
    service: aether-roc-umbrella-prometheus-ace-server
    port: 80
  grafana.ini:
    log:
      level: debug
    server:
      domain: aether-roc-gui:8183
      root_url: "%(protocol)s://%(domain)s/grafana/"
      serve_from_sub_path: true
    security:
      allow_embedding: true
    auth:
     disable_login_form: true
     oauth_auto_login: true
    auth.anonymous:
      enabled: false
      hide_version: false
# Disabled other auth types for the moment - see aether-roc-gui/docs/grafana.md
    auth.proxy:
      enabled: false
      header_name: X-WEBAUTH-USER
      header_property: username
      auto_sign_up: true
      enable_login_token: true
    auth.jwt:
      enabled: false
      header_name: X-JWT-Assertion
      username_claim: name
      email_claim: email
      jwk_set_url: "https://keycloak.opennetworking.org/auth/realms/master/protocol/openid-connect/certs"
      cache_ttl: 60m  
    auth.generic_oauth:
      enabled: true
      client_id: aether-roc-gui
#      client_secret: YWV0aGVyLXJvYy1ndWkK
      scopes: "openid profile email groups"
      empty_scopes: false
      auth_url: "http://k3u-keycloak:5557/auth/realms/master/protocol/openid-connect/auth"
      token_url: "http://k3u-keycloak:5557/auth/realms/master/protocol/openid-connect/token"
      api_url: "http://k3u-keycloak:5557/auth/realms/master/protocol/openid-connect/userinfo"
      allowed_domains: opennetworking.org
      allow_sign_up: true
      name: KeyCloak

prometheus-acc:
  pushgateway:
    enabled: false
  nodeExporter:
    enabled: false
  kubeStateMetrics:
    enabled: false
  alertmanager:
    configMapOverrideName: alertmanager
    webhook_url: "http://aether-roc-websocket/webhook"
  serverFiles:
    alerting_rules.yml:
     groups:
       - name: UeAlerts
         rules:
           - alert: UeThroughputLow
             expr: ue_throughput < 9000
             for: 1m
             labels:
               severity: info
             annotations:
               description: 'UE {{ $labels.id }} on VCS {{ $labels.slice }} throughput has been low for more than 1 minutes.'
               summary: 'UE {{ $labels.id }} on VCS {{ $labels.slice }} throughput low'
           - alert: UeLatencyHigh
             expr: ue_latency > 8
             for: 1m
             labels:
               severity: info
             annotations:
               description: 'UE {{ $labels.id }} on VCS {{ $labels.slice }} latency has been high for more than 1 minutes.'
               summary: 'UE {{ $labels.id }} on VCS {{ $labels.slice }} latency high'
       - name: VcsAlerts
         rules:
           - alert: VcsThroughputLow
             expr: vcs_throughput < 9000
             for: 1m
             labels:
               severity: info
             annotations:
               description: 'VCS {{ $labels.vcs_id }} throughput has been low for more than 1 minutes.'
               summary: 'VCS {{ $labels.vcs_id }} throughput low'
           - alert: VcsLatencyHigh
             expr: vcs_latency > 30
             for: 1m
             labels:
               severity: warn
             annotations:
               description: 'VCS {{ $labels.vcs_id }} latency has been high for more than 1 minutes.'
               summary: 'VCS {{ $labels.vcs_id }} latency high'
           - alert: VcsJitterHigh
             expr: vcs_jitter > 8
             for: 1m
             labels:
               severity: page
             annotations:
               description: 'VCS {{ $labels.vcs_id }} jitter has been high for more than 1 minutes.'
               summary: 'VCS {{ $labels.vcs_id }} jitter high'
    prometheus.yml:
      scrape_configs:
        - job_name: demo-exporter
          scrape_interval: 2s
          static_configs:
            - targets:
                - demo-exporter:2112

prometheus-amp:
  pushgateway:
    enabled: false
  nodeExporter:
    enabled: false
  kubeStateMetrics:
    enabled: false
  alertmanager:
    enabled: false
  serverFiles:
    prometheus.yml:
      scrape_configs:
        - job_name: demo-exporter
          scrape_interval: 2s
          static_configs:
            - targets:
                - demo-exporter:2112
  
prometheus-ace:
  pushgateway:
    enabled: false
  nodeExporter:
    enabled: false
  kubeStateMetrics:
    enabled: true
  alertmanager:
    enabled: false
  serverFiles:
    prometheus.yml:
      scrape_configs:
        - job_name: demo-exporter
          scrape_interval: 2s
          static_configs:
            - targets:
                - demo-exporter:2112
        - job_name: kube-state-metrics
          scrape_interval: 2s
          static_configs:
            - targets:
                - aether-roc-umbrella-kube-state-metrics:8080

# SD-Core Test Dummy
# proxy_pass has to be added or nginx will not log the $request_body
sdcore-test-dummy:
  service:
    type: ClusterIP
  existingServerBlockConfigmap: aether-roc-umbrella-sdcore-test-dummy

# ONOS-CONFIG
onos-config:
  store:
    consensus:
      enabled: false
  models:
    aether:
      v2:
        enabled: true
      v4:
        enabled: true
    plproxy:
      v1:
        enabled: true
  plugin:
    compiler:
      target: ""
  openpolicyagent:
    enabled: true
    regoConfigMap: aether-roc-umbrella-opa-rbac
